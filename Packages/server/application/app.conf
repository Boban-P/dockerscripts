
# application server
APP_IMAGE=
APP_CONTAINER=

# While starting containares Indivudally these paths used 
# to retrieve files, kubernets use network file shares,
# hence to not use these directories 
APP_ASSET=${DATA}/www
APP_DATA_ROOT="${ASSET}/www/data"
APP_CONFIG_ROOT="${ASSET}/www/conf"

# Marked for removal Use APP_DATA_ROOT and APP_CONFIG_ROOT
APP_PRIVATE_ROOT=${ASSET}/www

####################
# BACKUP & RESTORE #
####################
# git repository of asset files, this shourld not contain
# secrets used by the application.
# the user running setup script should have passwordless
# access to the repository.
# APP_ASSET_REPO=[git@github.com:user/repo.git]'
APP_ASSET_REPO=

# the branch from which the repo needs to clone from.
APP_REPO_BRANCH=development

# Where the application secrets and modified or generated filese
# to load from, it could be an nfs mount or downloaded form s3 bucket
# restore action run with sudo, so
# APP_PRIVATE_RESOURCE_TYPE=s3|nfs
APP_PRIVATE_RESOURCE_TYPE=

# The url of resources
# APP_PRIVATE_ROOT_SOURCE=urltomountpoint or s3 bucket file.
APP_PRIVATE_ROOT_SOURCE=

# in case of loading from s3 backup, or for a periodic update
# the s3 url of directory to which the backup needs to be stored to
# APP_PRIVATE_ROOT_BACKUP=S3-BACKUP-DIR-URL
APP_PRIVATE_ROOT_BACKUP=

# Marked for removal, use APP_DATA_MOUNTS instead.
# The files or directories writable by application
# these files are also shared with with webserver
# space seperated paths relative to APP_PRIVATE_ROOT
APP_DOCUMENT_ASSETS=

# Marked for removal, use APP_CONFIG_MOUNTS instead.
# The files or directories writable by application
# these files are not shared with webserver
# space seperated paths relative to APP_PRIVETE_ROOT
APP_PRIVATE_ASSETS=

# These files are mounted readwrite
# Mounts files/directories from data mount location to
# DOCUMENT_ROOT location, multiple entries are seperated
# by semicolon, in the format data-location:document-location
APP_DATA_MOUNTS=

# These files are mounted readOnly
# Mounts files/directories from conf mount location to
# DOCUMENT_ROOT location, multiple entries are seperated
# by semicolon, source and destination relative path are seperated
# by colon.
APP_CONFIG_MOUNTS=

# default to application containers LISTEN_PORT
APP_LISTEN_PORT=

# if enabled remote debug in container, this will enable
# remote debugging by port forwarding
APP_DEBUG_MAP_PORT=0

# custom additional environment variable to be passed to application
# APP_ENV_{name}={value}

# custom docker mount options
# APP_MOUNT_{name}=type=bind,source={hostfile},destination={containerfile}[,readonly]

# The container path to mount APP_ASSET to.
DOCUMENT_ROOT=/home/www

# The container path to mount APP_PRIVATE_ROOT to.
DATA_ROOT=/home/data

# The container path to mount APP_CONFIG_ROOT to.
CONF_ROOT=/home/conf

# Incase APP_ASSET needs to be mounted readonly, set it to 0
APP_WRITE_MOUNT=1

#!/bin/bash

function __do_call() {
    # $1 reaonly
    # $2 create
    # $3 document root optional
    local create readonlymount docroot
    create=${2//0/}
    readonlymount=${1//0/}
    docroot=${3:-"${DOCUMENT_ROOT}"}
    if [[ -n "${APP_ASSET}" ]]; then
        for line in $(env | grep -e '^APP_DOCUMENT_ASSET_'); do
            # Mounting APP_PRIVATE_ROOT/DIR TO DOCUMENT_ROOT/DIR
            # Creating directory from APP_ASSET/DIR
            local dir=${line#APP_DOCUMENT_ASSET_*=}
            local destination="${APP_PRIVATE_ROOT%/}/${dir}"
            if [[ -n "${create}" ]]; then 
                if [[ (! -f "${destination}") && (! -d "${destination}") ]]; then
                    local source="${APP_ASSET%/}/${dir}"
                    if [[ (-f "${source}") || (-d "${source}") ]]; then
                        mkdir -p "$(dirname "${destination}")"
                        cp -a "${source}" "${destination}"
                    fi
                fi
            fi
            if [[ (-f "${destination}") || (-d "${destination}") ]]; then
                if [[ -n "${readonlymount}" ]]; then        
                    echo "export SITE_PATH_${line%="$dir"}=type=bind,source='${destination}',destination='${docroot%/}/${dir}',readonly"
                else
                    echo "export SITE_PATH_${line%="$dir"}=type=bind,source='${destination}',destination='${docroot%/}/${dir}'"
                fi
            fi
        done
        # mount some files which is not accessible to webserver.
        # readonly is false.
        if [[ -z "${readonlymount}" ]]; then
            # create is true
            if [[ (-n "${create}") && (-n "${APP_PRIVATE_ROOT}") ]]; then
                for line in $(env | grep -e '^APP_PRIVATE_ASSET_'); do
                    local dir destinationdir source
                    dir=${line#APP_PRIVATE_ASSET_*=}
                    destination="${APP_ASSET%/}/${dir}"
                    source="${APP_PRIVATE_ROOT%/}/${dir}"
                    if [[ (! -f "${source}") && (! -d "${source}") ]]; then
                        if [[ (-f "${destination}") || (-d "${destination}") ]]; then
                            mkdir -p $(dirname "${source}")
                            cp -r "${destination}" "${source}"
                        fi
                    fi

                    if [[ (-f "${source}") || (-d "${source}") ]]; then
                        echo "export SITE_PATH_${line%="$dir"}=type=bind,source='${source}',destination='${docroot%/}/${dir}'"
                    fi

                done
            fi
        fi
    fi
}


__do_call "$@" # | sed 's/$/ ;/'
